package tree.pine;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.util.ArrayList;

import tree.generic.Leaf;

public class PineLeaf extends Leaf{
	
	private BufferedImage image;
	
	public PineLeaf(int x, int y, int height, double direction){
		
		super(x, y, height, direction);
		
		drawToImage();
	}
	
	public void grow(){
		
		if(getHeight() < getFinalHeight()){
			
			if(Math.random() < 0.5) {
				
				changeXPoint(Math.sin(getDirection()));
			} 
			else {changeXPoint(-Math.sin(getDirection()));}
			
			changeYPoint(Math.cos(getDirection()));
		}
	}
	
	public void drawToImage(){
		
		BufferedImage image = new BufferedImage(getFinalHeight() * 2, getFinalHeight() * 2, BufferedImage.TYPE_INT_ARGB);
		Graphics2D g2D = (Graphics2D) image.getGraphics();
		
		AffineTransform at = new AffineTransform();
		at.rotate(direction, image.getWidth() / 2, image.getHeight() / 2);
		g2D.setTransform(at);
		
		g2D.setColor(color);
		int leafBase = yPoints.length / 2;
		
		for(int i = yPoints.length / 5; i < yPoints.length; i++){
			
			g2D.drawLine(xPoints[i] - (int) (leafBase * ((double) (xPoints.length - i) / (double) xPoints.length)), yPoints[i], xPoints[i] + (int) (leafBase * ((double) (xPoints.length - i) / (double) xPoints.length)), yPoints[i]);
		}
		
		g2D.setColor(Color.GRAY);
		g2D.drawPolyline(xPoints, yPoints, xPoints.length);
	}
	
	public void draw(Graphics g){
		
		g.setColor(Color.GREEN);
		g.drawPolyline(getXPoints(), getYPoints(), getXPoints().length);
	}
}
